import find from "lodash.find";
import objectAssign from "object-assign";
import DiodeQueryTypes from "./DiodeQueryTypes";
import resolveBatchQuery from "./resolveBatchQuery";

import type { DiodeQueryRequest } from "./DiodeQueryRequest";

export default function resolveQueryResponse(
  queries: Array<DiodeQueryRequest>,
  initialQueries: Array<DiodeQueryRequest>,
  queryResponseMap,
  options
) {
  return Object.keys(queryResponseMap).reduce((map, type) => {
    const queryResponse = queryResponseMap[type];
    const query = find(queries, { type });

    if (type === DiodeQueryTypes.BATCH) {
      // BatchQuery returns multiple response at once as single object,
      // we need to merge initial response with response generated by
      // batch query response resolution
      const batchQueryResponseMap = resolveBatchQuery(
        query.resolve(queryResponse, options),
        initialQueries,
        options
      );
      objectAssign(map, batchQueryResponseMap);
    } else {
      map[type] = query.resolve(queryResponse, query.fragment, options);
    }

    return map;
  }, {});
}
